# diary_analytic/views.py

from datetime import datetime
from django.shortcuts import render
from django.http import HttpRequest, HttpResponse
from .models import Entry, Parameter, EntryValue
from .forms import EntryForm
from .utils import get_diary_dataframe
from .loggers import web_logger


# --------------------------------------------------------------------
# üìÖ –ì–ª–∞–≤–Ω–∞—è –≤—å—é—à–∫–∞: –¥–Ω–µ–≤–Ω–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ –¥–∞—Ç—É
# --------------------------------------------------------------------

def add_entry(request: HttpRequest) -> HttpResponse:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞ –ø–æ –¥–∞—Ç–µ.

    –ü–æ–≤–µ–¥–µ–Ω–∏–µ:
    - ‚è±Ô∏è –ü–æ–ª—É—á–∞–µ—Ç –¥–∞—Ç—É –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ `?date=...`, –ª–∏–±–æ –±–µ—Ä—ë—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é.
    - üîÑ –°–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –æ–±—ä–µ–∫—Ç Entry –∑–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å.
    - üìå –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ –º–æ–¥–µ–ª–∏ Parameter.
    - üìà –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (EntryValue), –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.
    - üìù –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ä–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏ —Å–≤—è–∑—ã–≤–∞–µ—Ç —Å Entry.
    - üí¨ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç POST-–∑–∞–ø—Ä–æ—Å: –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
    - üñºÔ∏è –ü–µ—Ä–µ–¥–∞—ë—Ç –≤—Å—ë –≤ —à–∞–±–ª–æ–Ω `add_entry.html`.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω–Ω—É—é HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É.
    """

    # ----------------------------------------------------------------
    # üïì 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏–∑ GET-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    # ----------------------------------------------------------------
    today_str = datetime.now().date().isoformat()  # –°—Ç—Ä–æ–∫–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "2025-05-12")
    selected_str = request.GET.get("date", today_str)  # –ï—Å–ª–∏ –Ω–µ—Ç ?date=, —Ç–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Å–µ–≥–æ–¥–Ω—è

    try:
        selected_date = datetime.strptime(selected_str, "%Y-%m-%d").date()
        web_logger.debug(f"[add_entry] ‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –¥–∞—Ç–∞ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞: {selected_date}")
    except ValueError:
        selected_date = datetime.now().date()
        web_logger.warning(f"[add_entry] ‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ '{selected_str}' ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é: {selected_date}")

    # ----------------------------------------------------------------
    # üßæ 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º Entry –Ω–∞ —ç—Ç—É –¥–∞—Ç—É
    # ----------------------------------------------------------------
    entry, created = Entry.objects.get_or_create(date=selected_date)

    if created:
        web_logger.debug(f"[add_entry] üÜï –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å Entry –Ω–∞ –¥–∞—Ç—É: {selected_date}")
    else:
        web_logger.debug(f"[add_entry] üìÑ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å Entry –Ω–∞ –¥–∞—Ç—É: {selected_date}")

    # ----------------------------------------------------------------
    # üìù 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    # ----------------------------------------------------------------
    form = EntryForm(instance=entry)
    web_logger.debug(f"[add_entry] üßæ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Ñ–æ—Ä–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è Entry ({selected_date})")

    # ----------------------------------------------------------------
    # üìå 4. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –±–∞–∑—ã
    # ----------------------------------------------------------------
    parameters = Parameter.objects.filter(is_active=True).order_by("name")
    web_logger.debug(f"[add_entry] üìå –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {parameters.count()}")

    # ----------------------------------------------------------------
    # üìà 5. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞ –¥–µ–Ω—å (–µ—Å–ª–∏ –µ—Å—Ç—å)
    # ----------------------------------------------------------------
    entry_values = EntryValue.objects.filter(entry=entry).select_related("parameter")
    values_map = {
        v.parameter.key: v.value
        for v in entry_values
    }
    web_logger.debug(f"[add_entry] üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è Entry: {len(values_map)} ‚Äî {values_map}")

    # ----------------------------------------------------------------
    # üí¨ 6. –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è)
    # ----------------------------------------------------------------
    if request.method == "POST":
        web_logger.debug(f"[add_entry] üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞")

        form = EntryForm(request.POST, instance=entry)
        if form.is_valid():
            form.save()
            web_logger.info(f"[add_entry] üíæ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–±–Ω–æ–≤–ª—ë–Ω –¥–ª—è {selected_date}: ¬´{entry.comment[:50]}...¬ª")
        else:
            web_logger.warning(f"[add_entry] ‚ùå –§–æ—Ä–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é: {form.errors}")

        # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ train=1 (–æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏)

    # ----------------------------------------------------------------
    # üñºÔ∏è 7. –†–µ–Ω–¥–µ—Ä–∏–º HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ —à–∞–±–ª–æ–Ω
    # ----------------------------------------------------------------
    web_logger.debug(f"[add_entry] üì§ –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω add_entry.html")

    return render(request, "diary_analytic/add_entry.html", {
        "form": form,                         # –§–æ—Ä–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        "parameters": parameters,             # –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        "values_map": values_map,             # –°–ª–æ–≤–∞—Ä—å: { "toshn": 2.0, "ustalost": 1.0 }
        "selected_date": selected_date,       # –î–∞—Ç–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–Ω–µ–≤–Ω–∏–∫
        "today_str": today_str,               # –°—Ç—Ä–æ–∫–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω–µ)
    })

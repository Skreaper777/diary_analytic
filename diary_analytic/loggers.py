# diary_analytic/loggers.py

import logging
import os

# -------------------------------------------------------------------
# üìÅ –ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è –ª–æ–≥–æ–≤
# -------------------------------------------------------------------

# –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ /logs, –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
# (–Ω–∞ –æ–¥–∏–Ω —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞, —Ç.–µ. –≤—ã—à–µ diary_analytic/)
LOG_DIR = os.path.join(os.path.dirname(os.path.dirname(__file__)), "logs")

# –ï—Å–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ logs –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω ‚Äî —Å–æ–∑–¥–∞—ë–º –µ–≥–æ (–∏–Ω–∞—á–µ FileNotFoundError)
os.makedirs(LOG_DIR, exist_ok=True)

# -------------------------------------------------------------------
# üß∞ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–≥–µ—Ä–∞
# -------------------------------------------------------------------

def setup_logger(name: str, logfile: str) -> logging.Logger:
    """
    –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥—Å–∏—Å—Ç–µ–º –ø—Ä–æ–µ–∫—Ç–∞.

    :param name: –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∏–º—è –ª–æ–≥–≥–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'web', 'predict')
    :param logfile: –∏–º—è —Ñ–∞–π–ª–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –ø–∏—Å–∞—Ç—å—Å—è –ª–æ–≥–∏
    :return: –æ–±—ä–µ–∫—Ç Logger, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –Ω–∞ –≤—ã–≤–æ–¥ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–æ–≥-—Ñ–∞–π–ª

    üìå –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
    - –õ–æ–≥–≥–µ—Ä—ã —Å–æ–∑–¥–∞—é—Ç—Å—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ
    - –ö–∞–∂–¥—ã–π —Ñ–∞–π–ª –ª–æ–≥–∏—Ä—É–µ—Ç —Å–≤–æ—é –ø–æ–¥—Å–∏—Å—Ç–µ–º—É
    - –§–æ—Ä–º–∞—Ç –ª–æ–≥–æ–≤ —á–∏—Ç–∞–µ–º—ã–π –∏ —Å—Ç–∞–±–∏–ª–µ–Ω
    """

    # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: /logs/web.log)
    path = os.path.join(LOG_DIR, logfile)

    # –û—á–∏—â–∞–µ–º –ª–æ–≥ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ, —á—Ç–æ–±—ã –Ω–µ –∫–æ–ø–∏—Ç—å —Å—Ç–∞—Ä–æ–µ (mode="w" –Ω–∞ —Å—Ç–∞—Ä—Ç–µ)
    open(path, 'w').close()

    # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞
    logger = logging.getLogger(name)
    logger.setLevel(logging.DEBUG)  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å—ë, –≤–∫–ª—é—á–∞—è –æ—Ç–ª–∞–¥–∫—É

    # –°–æ–∑–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≥–æ–≤, –∑–∞–ø–∏—Å—ã–≤–∞—é—â–∏–π –≤ —Ñ–∞–π–ª
    handler = logging.FileHandler(path, mode="a", encoding="utf-8")

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
    formatter = logging.Formatter("[%(asctime)s] [%(name)s] [%(funcName)s] ‚Äî %(message)s")
    handler.setFormatter(formatter)

    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ –ª–æ–≥–≥–µ—Ä—É
    logger.addHandler(handler)

    # –û—Ç–∫–ª—é—á–∞–µ–º –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é –Ω–∞ —É—Ä–æ–≤–Ω–µ –ª–æ–≥–≥–µ—Ä–∞
    logger.propagate = False

    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –±—É—Ñ–µ—Ä –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
    handler.flush = lambda: handler.stream.flush()

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—ã–π –ª–æ–≥–≥–µ—Ä
    return logger

# -------------------------------------------------------------------
# üîß –ì–æ—Ç–æ–≤—ã–µ –ª–æ–≥–≥–µ—Ä—ã –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã
# -------------------------------------------------------------------

# üìò WEB: –º–∞—Ä—à—Ä—É—Ç—ã, –ø–µ—Ä–µ—Ö–æ–¥—ã, –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü, GET/POST –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
web_logger = setup_logger("web", "web.log")

# üìä ML: –≤—ã–∑–æ–≤ –º–æ–¥–µ–ª–µ–π, —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤, –æ–±—ä—è—Å–Ω–µ–Ω–∏—è, –æ—à–∏–±–∫–∏ –º–æ–¥–µ–ª–µ–π
predict_logger = setup_logger("predict", "predict.log")

# üóÉÔ∏è –ë–î: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ Entry, EntryValue, Parameter
db_logger = setup_logger("db", "db.log")
